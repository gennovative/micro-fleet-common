{"version":3,"sources":["app/validators/ValidationError.ts"],"names":[],"mappings":";;AAEA,+DAAiE;AAwBjE;;GAEG;AACH,qBAA6B,SAAQ,qCAAc;IAKlD,YAAY,UAAqC;QAChD,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC7C,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAChD,CAAC;IAEO,YAAY,CAAC,UAAqC;QACzD,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,0BAA0B;QAC1B,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC;QAAC,CAAC;QAE1D,UAAU,CAAC,OAAO,CAAC,CAAC;YACnB,OAAO,CAAC,IAAI,CAAC;gBACZ,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK;aACtB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IAChB,CAAC;CACD;AA3BD,0CA2BC","file":"ValidationError.js","sourcesContent":["import * as joi from 'joi';\r\n\r\nimport { Exception, MinorException } from 'back-lib-common-util';\r\n\r\n\r\n/**\r\n * Represents a validation error for a property.\r\n * UI Form should use this information to highlight the particular input.\r\n */\r\nexport interface IValidationErrorItem {\r\n\t/**\r\n\t * Error message for this item.\r\n\t */\r\n\tmessage: string;\r\n\r\n\t/**\r\n\t * Path to the target property in validation schema.\r\n\t */\r\n\tpath: string;\r\n\r\n\t/**\r\n\t * The invalid property value.\r\n\t */\r\n\tvalue: any;\r\n}\r\n\r\n/**\r\n * Represents an error when a model does not pass validation.\r\n */\r\nexport class ValidationError extends MinorException {\r\n\t\r\n\tpublic readonly details: IValidationErrorItem[];\r\n\r\n\r\n\tconstructor(joiDetails: joi.ValidationErrorItem[]) {\r\n\t\tsuper(null);\r\n\t\tthis.name = 'ValidationError';\r\n\t\tthis.details = this.parseDetails(joiDetails);\r\n\t\tError.captureStackTrace(this, ValidationError);\r\n\t}\r\n\r\n\tprivate parseDetails(joiDetails: joi.ValidationErrorItem[]): IValidationErrorItem[] {\r\n\t\tlet details = [];\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!joiDetails || !joiDetails.length) { return details; }\r\n\r\n\t\tjoiDetails.forEach(d => {\r\n\t\t\tdetails.push({\r\n\t\t\t\tmessage: d.message,\r\n\t\t\t\tpath: d.path,\r\n\t\t\t\tvalue: d.context.value\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn details;\r\n\t}\r\n}"]}