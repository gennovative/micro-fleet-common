{"version":3,"sources":["app/models/settings/CacheSettings.ts"],"names":[],"mappings":";;AAAA,8DAA2E;AAE3E,+CAAiE;AAEjE;;GAEG;AACH,mBACC,SAAQ,KAAkB;IAEnB,MAAM,CAAC,YAAY,CAAC,QAAgC;QAC1D,IAAI,KAAK,GAAW,QAAQ,CAAC,GAAG,CAAC,wBAAC,CAAC,cAAc,CAAC,EACjD,OAAO,GAA6B,EAAE,EACtC,CAAC,CAAC;QAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,wBAAC,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,wBAAC,CAAC,UAAU,GAAG,CAAC,CAAC;aACpC,CAAC,CAAC;SACH;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;IACxC,CAAC;IAKD;QACC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,yBAAW,CAAC,UAAU,CAAC,KAAK,CAAC;YAC/C,IAAI,EAAE,wBAAC,CAAC,cAAc;YACtB,QAAQ,EAAE,iCAAmB,CAAC,MAAM;YACpC,KAAK,EAAE,GAAG;SACV,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAGD;;OAEG;IACH,IAAW,KAAK;QACf,OAAO,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACI,cAAc,CAAC,MAA8B;QACnD,IAAI,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE9C,IAAI,CAAC,IAAI,CAAC,yBAAW,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,wBAAC,CAAC,UAAU,GAAG,MAAM;YAC3B,QAAQ,EAAE,iCAAmB,CAAC,MAAM;YACpC,KAAK,EAAE,MAAM,CAAC,IAAI;SAClB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,IAAI,CAAC,yBAAW,CAAC,UAAU,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,wBAAC,CAAC,UAAU,GAAG,MAAM;YAC3B,QAAQ,EAAE,iCAAmB,CAAC,MAAM;YACpC,KAAK,EAAE,MAAM,CAAC,IAAI,GAAG,EAAE;SACvB,CAAC,CAAC,CAAC;QAEL,IAAI,OAAO,GAAQ,IAAI,CAAC,WAAW,CAAC;QACpC,OAAO,CAAC,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACnC,CAAC;CACD;AA3DD,sCA2DC","file":"CacheSettings.js","sourcesContent":["import { CacheSettingKeys as S } from '../../constants/setting-keys/cache';\r\nimport { IConfigurationProvider, ICacheConnectionDetail } from '../../interfaces/configurations';\r\nimport { SettingItem, SettingItemDataType } from './SettingItem';\r\n\r\n/**\r\n * Wraps an array of database settings.\r\n */\r\nexport class CacheSettings\r\n\textends Array<SettingItem> {\r\n\r\n\tpublic static fromProvider(provider: IConfigurationProvider): ICacheConnectionDetail[] {\r\n\t\tlet nConn = <number>provider.get(S.CACHE_NUM_CONN),\r\n\t\t\tdetails: ICacheConnectionDetail[] = [],\r\n\t\t\td;\r\n\r\n\t\tfor (let i = 0; i < nConn; ++i) {\r\n\t\t\tdetails.push({\r\n\t\t\t\thost: provider.get(S.CACHE_HOST + i),\r\n\t\t\t\tport: provider.get(S.CACHE_PORT + i)\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn details.length ? details : null;\r\n\t}\r\n\r\n\r\n\tprivate _numSetting: SettingItem;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._numSetting = SettingItem.translator.whole({\r\n\t\t\tname: S.CACHE_NUM_CONN,\r\n\t\t\tdataType: SettingItemDataType.Number,\r\n\t\t\tvalue: '0'\r\n\t\t});\r\n\r\n\t\tthis.push(this._numSetting);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets number of connection settings.\r\n\t */\r\n\tpublic get total(): number {\r\n\t\treturn parseInt(this._numSetting.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses then adds connection detail to setting item array.\r\n\t */\r\n\tpublic pushConnection(detail: ICacheConnectionDetail) {\r\n\t\tlet newIdx = parseInt(this._numSetting.value);\r\n\r\n\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\tname: S.CACHE_HOST + newIdx,\r\n\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\tvalue: detail.host\r\n\t\t\t}));\r\n\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\tname: S.CACHE_PORT + newIdx,\r\n\t\t\t\tdataType: SettingItemDataType.Number,\r\n\t\t\t\tvalue: detail.port + ''\r\n\t\t\t}));\r\n\r\n\t\tlet setting: any = this._numSetting;\r\n\t\tsetting.value = (newIdx + 1) + '';\r\n\t}\r\n}"]}