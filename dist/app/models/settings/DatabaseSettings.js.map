{"version":3,"sources":["app/models/settings/DatabaseSettings.ts"],"names":[],"mappings":"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","file":"DatabaseSettings.js","sourcesContent":["import { DbSettingKeys as S } from 'back-lib-common-constants';\r\n\r\nimport { IConfigurationProvider, IConnectionDetail } from '../../interfaces/configurations';\r\nimport { SettingItem, SettingItemDataType } from './SettingItem';\r\n\r\n\r\n/**\r\n * Wraps an array of database settings.\r\n */\r\nexport class DatabaseSettings\r\n\textends Array<SettingItem> {\r\n\r\n\tpublic static fromProvider(provider: IConfigurationProvider): IConnectionDetail[] {\r\n\t\tlet nConn = <number>provider.get(S.DB_NUM_CONN),\r\n\t\t\tdetails = [],\r\n\t\t\td;\r\n\r\n\t\tfor (let i = 0; i < nConn; ++i) {\r\n\t\t\td = this.buildConnDetails(i, provider);\r\n\t\t\tif (!d) { continue; }\r\n\t\t\tdetails.push(d);\r\n\t\t}\r\n\t\treturn details.length ? details : null;\r\n\t}\r\n\r\n\tprivate static buildConnDetails(connIdx: number, provider: IConfigurationProvider): IConnectionDetail {\r\n\t\tlet cnnDetail: IConnectionDetail = {\r\n\t\t\t\tclientName: provider.get(S.DB_ENGINE + connIdx) // Must belong to `DbClient`\r\n\t\t\t},\r\n\t\t\tvalue: string;\r\n\r\n\t\t// 1st priority: connect to a local file.\r\n\t\tvalue = provider.get(S.DB_FILE + connIdx);\r\n\t\tif (value) {\r\n\t\t\tcnnDetail.filePath = value;\r\n\t\t\treturn cnnDetail;\r\n\t\t}\r\n\r\n\t\t// 2nd priority: connect with a connection string.\r\n\t\tvalue = provider.get(S.DB_CONN_STRING + connIdx);\r\n\t\tif (value) {\r\n\t\t\tcnnDetail.connectionString = value;\r\n\t\t\treturn cnnDetail;\r\n\t\t}\r\n\r\n\t\t// Last priority: connect with host credentials.\r\n\t\tvalue = provider.get(S.DB_HOST + connIdx);\r\n\t\tif (value) {\r\n\t\t\tcnnDetail.host = {\r\n\t\t\t\taddress: provider.get(S.DB_HOST + connIdx),\r\n\t\t\t\tuser: provider.get(S.DB_USER + connIdx),\r\n\t\t\t\tpassword: provider.get(S.DB_PASSWORD + connIdx),\r\n\t\t\t\tdatabase: provider.get(S.DB_NAME + connIdx),\r\n\t\t\t};\r\n\t\t\treturn cnnDetail;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\tprivate _countSetting: SettingItem;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._countSetting = SettingItem.translator.whole({\r\n\t\t\tname: S.DB_NUM_CONN,\r\n\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\tvalue: '0'\r\n\t\t});\r\n\r\n\t\tthis.push(this._countSetting);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets number of connection settings.\r\n\t */\r\n\tpublic get total(): number {\r\n\t\treturn parseInt(this._countSetting.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses then adds connection detail to setting item array.\r\n\t */\r\n\tpublic pushConnection(detail: IConnectionDetail) {\r\n\t\tlet total = parseInt(this._countSetting.value);\r\n\r\n\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\tname: S.DB_ENGINE + total,\r\n\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\tvalue: detail.clientName\r\n\t\t\t}));\r\n\r\n\t\tif (detail.host) {\r\n\t\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\t\tname: S.DB_HOST + total,\r\n\t\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\t\tvalue: detail.host.address\r\n\t\t\t\t}));\r\n\t\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\t\tname: S.DB_USER + total,\r\n\t\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\t\tvalue: detail.host.user\r\n\t\t\t\t}));\r\n\t\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\t\tname: S.DB_PASSWORD + total,\r\n\t\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\t\tvalue: detail.host.password\r\n\t\t\t\t}));\r\n\t\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\t\tname: S.DB_NAME + total,\r\n\t\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\t\tvalue: detail.host.database\r\n\t\t\t\t}));\r\n\t\t} else if (detail.filePath) {\r\n\t\t\tthis.push(SettingItem.translator.whole({\r\n\t\t\t\t\tname: S.DB_FILE + total,\r\n\t\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\t\tvalue: detail.filePath\r\n\t\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.push(SettingItem.translator.whole(\r\n\t\t\t\t{\r\n\t\t\t\t\tname: S.DB_CONN_STRING + total,\r\n\t\t\t\t\tdataType: SettingItemDataType.String,\r\n\t\t\t\t\tvalue: detail.connectionString\r\n\t\t\t\t}));\r\n\t\t}\r\n\r\n\t\tlet setting: any = this._countSetting;\r\n\t\tsetting.value = (total + 1) + '';\r\n\t}\r\n}"]}