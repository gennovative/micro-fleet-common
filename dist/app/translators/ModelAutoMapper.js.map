{"version":3,"sources":["app/translators/ModelAutoMapper.ts"],"names":[],"mappings":"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","file":"ModelAutoMapper.js","sourcesContent":["/* istanbul ignore else */\r\nif (!global['automapper']) {\r\n\t// AutoMapper registers itself as a singleton global variable.\r\n\trequire('automapper-ts');\r\n}\r\n\r\nimport { JoiModelValidator } from '../validators/JoiModelValidator';\r\nimport { ValidationError } from '../validators/ValidationError';\r\n\r\n\r\nexport interface MappingOptions {\r\n\t/**\r\n\t * Temporarily turns on or off model validation.\r\n\t * Can only be turned on if validator is provided to constructor.\r\n\t */\r\n\tenableValidation?: boolean;\r\n\r\n\t/**\r\n\t * If specified, gives validation error to this callback. Otherwise, throw error.\r\n\t */\r\n\terrorCallback?: (err: ValidationError) => void;\r\n}\r\n\r\n/**\r\n * Provides functions to auto mapping an arbitrary object to model of specific class type.\r\n */\r\nexport class ModelAutoMapper<T extends Object> {\r\n\r\n\t/**\r\n\t * Turns on or off model validation before translating.\r\n\t * Is set to `true` if validator is passed to class constructor.\r\n\t */\r\n\tpublic enableValidation: boolean;\r\n\r\n\r\n\t/**\r\n\t * @param {class} ModelClass The model class\r\n\t * @param {JoiModelValidator} _validator The model validator. If specified, turn on `enableValidation`\r\n\t */\r\n\tconstructor(\r\n\t\tprotected ModelClass: new() => any,\r\n\t\tprotected _validator?: JoiModelValidator<T>\r\n\t) {\r\n\t\tthis.enableValidation = (_validator != null);\r\n\t\tthis.createMap();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets validator.\r\n\t */\r\n\tpublic get validator(): JoiModelValidator<T> {\r\n\t\treturn this._validator;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from `sources` to dest then optionally validates\r\n\t * the result (depends on `enableValidation`).\r\n\t * If `enableValidation` is turned off, it works just like native `Object.assign()` function,\r\n\t * therefore, use `Object.assign()` for better performance if validation is not needed.\r\n\t * Note that it uses `partial()` internally, hence `required` validation is IGNORED.\r\n\t * \r\n\t * @throws {ValidationError}\r\n\t */\r\n\tpublic merge(dest: Partial<T>, sources: Partial<T> | Partial<T>[], options?: MappingOptions): Partial<T> {\r\n\t\tif (dest == null || typeof dest !== 'object') { return dest; }\r\n\t\tdest = Object.assign.apply(null, Array.isArray(sources) ? [dest, ...sources] : [dest, sources]);\r\n\t\treturn this.partial(dest, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates then converts an object to type <T>. \r\n\t * but ONLY properties with value are validated and copied.\r\n\t * Note that `required` validation is IGNORED.\r\n\t * @param {any | any[]} source An object or array of objects to be translated.\r\n\t * \r\n\t * @throws {ValidationError} If no `errorCallback` is provided.\r\n\t */\r\n\tpublic partial(source: any | any[], options?: MappingOptions): Partial<T> & Partial<T>[] {\r\n\t\treturn this.tryTranslate('partial', source, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates then converts an object to type <T>. \r\n\t * ALL properties are validated and copied regardless with or without value.\r\n\t * @param {any | any[]} source An object or array of objects to be translated.\r\n\t * \r\n\t * @throws {ValidationError} If no `errorCallback` is provided.\r\n\t */\r\n\tpublic whole(source: any | any[], options?: MappingOptions): T & T[] {\r\n\t\treturn this.tryTranslate('whole', source, options);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initializes the model mapping engine.\r\n\t */\r\n\tprotected createMap(): void {\r\n\t\tautomapper.createMap('any', this.ModelClass);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Is invoked after source object is validated to map source object to target model.\r\n\t */\r\n\tprotected map(source: any): T {\r\n\t\treturn automapper.map('any', this.ModelClass, source);\r\n\t}\r\n\r\n\r\n\tprivate tryTranslate(fn: string, source: any | any[], options?: MappingOptions): T & T[] {\r\n\t\tif (source == null || typeof source !== 'object') { return source; }\r\n\r\n\t\toptions = Object.assign(<MappingOptions>{\r\n\t\t\tenableValidation: this.enableValidation,\r\n\t\t}, options);\r\n\r\n\t\t// Translate an array or single item\r\n\t\tif (Array.isArray(source)) {\r\n\t\t\treturn <any>source.map(s => this.translate(fn, s, options));\r\n\t\t}\r\n\t\treturn <any>this.translate(fn, source, options);\r\n\t}\r\n\r\n\tprivate translate(fn: string, source: any, options: MappingOptions): T {\r\n\t\tif (!options.enableValidation) {\r\n\t\t\treturn this.map(source);\r\n\t\t}\r\n\r\n\t\tlet [error, model] = this.validator[fn](source),\r\n\t\t\thandleError = function (err, callback) {\r\n\t\t\t\tif (!err) { return false; }\r\n\t\t\t\tif (!callback) {\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}\r\n\t\t\t\tcallback(err);\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\r\n\t\tif (handleError(error, options.errorCallback)) { // Validation error\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn this.map(model);\r\n\t\t} catch (ex) {\r\n\t\t\thandleError(ex, options.errorCallback); // Mapping error\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}"]}