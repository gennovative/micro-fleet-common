{"version":3,"sources":["app/translators/ModelAutoMapper.ts"],"names":[],"mappings":";;AAAA,0BAA0B;AAC1B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3B,8DAA8D;IAC9D,OAAO,CAAC,eAAe,CAAC,CAAC;AAC1B,CAAC;AAMD;;GAEG;AACH;IASC;;;OAGG;IACH,YACW,UAAwB,EACxB,UAAiC;QADjC,eAAU,GAAV,UAAU,CAAc;QACxB,eAAU,GAAV,UAAU,CAAuB;QAE3C,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAGD;;OAEG;IACH,IAAW,SAAS;QACnB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED;;;;;;;;OAQG;IACI,OAAO,CAAC,MAAW,EAAE,MAAe,EAAE,aAA8C;QAC1F,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IACjE,CAAC;IAED;;;;;;;;OAQG;IACI,KAAK,CAAC,MAAW,EAAE,MAAe,EAAE,aAA8C;QACxF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;IAC/D,CAAC;IAGD;;OAEG;IACO,SAAS;QAClB,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACO,GAAG,CAAC,MAAW;QACxB,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IAGS,SAAS,CAAC,EAAU,EAAE,MAAW,EAAE,MAAe,EAAE,aAA8C;QAC3G,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzB,CAAC;QAED,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACpB,MAAM,KAAK,CAAC;YACb,CAAC;YACD,aAAa,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;CACD;AAtFD,0CAsFC","file":"ModelAutoMapper.js","sourcesContent":["/* istanbul ignore else */\r\nif (!global['automapper']) {\r\n\t// AutoMapper registers itself as a singleton global variable.\r\n\trequire('automapper-ts');\r\n}\r\n\r\nimport { JoiModelValidator } from '../validators/JoiModelValidator';\r\nimport { ValidationError } from '../validators/ValidationError';\r\n\r\n\r\n/**\r\n * Provides functions to auto mapping an arbitrary object to model of specific class type.\r\n */\r\nexport class ModelAutoMapper<T> {\r\n\r\n\t/**\r\n\t * Turns on or off model validation before translating.\r\n\t * Is set to `true` if validator is passed to class constructor.\r\n\t */\r\n\tpublic enableValidation: boolean;\r\n\r\n\r\n\t/**\r\n\t * @param {class} ModelClass The model class\r\n\t * @param {JoiModelValidator} _validator The model validator. If specified, turn on `enableValidation`\r\n\t */\r\n\tconstructor(\r\n\t\tprotected ModelClass: new() => any,\r\n\t\tprotected _validator?: JoiModelValidator<T>\r\n\t) {\r\n\t\tthis.enableValidation = (_validator != null);\r\n\t\tthis.createMap();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets validator.\r\n\t */\r\n\tpublic get validator(): JoiModelValidator<T> {\r\n\t\treturn this._validator;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates then converts an object to type <T>. \r\n\t * but ONLY properties with value are validated and copied.\r\n\t * @param {any} source\r\n\t * @param {boolean} isEdit If `true`, validates model ID. Otherwise, excludes model ID from validation. Only takes effect when `enableValidation` is `true`.\r\n\t * @param {Function} errorCallback If specified, gives validation error to this callback. Otherwise, throw error.\r\n\t * \r\n\t * @throws {ValidationError} If no `errorCallback` is provided.\r\n\t */\r\n\tpublic partial(source: any, isEdit: boolean, errorCallback?: (err: ValidationError) => void): Partial<T> {\r\n\t\treturn this.translate('partial', source, isEdit, errorCallback);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates then converts an object to type <T>. \r\n\t * ALL properties are validated and copied regardless with or without value.\r\n\t * @param {any} source\r\n\t * @param {boolean} isEdit If `true`, validates model ID. Otherwise, excludes model ID from validation. Only takes effect when `enableValidation` is `true`.\r\n\t * @param {Function} errorCallback If specified, gives validation error to this callback. Otherwise, throw error.\r\n\t * \r\n\t * @throws {ValidationError} If no `errorCallback` is provided.\r\n\t */\r\n\tpublic whole(source: any, isEdit: boolean, errorCallback?: (err: ValidationError) => void): T {\r\n\t\treturn this.translate('whole', source, isEdit, errorCallback);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Initializes the model mapping engine.\r\n\t */\r\n\tprotected createMap(): void {\r\n\t\tautomapper.createMap('any', this.ModelClass);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Is invoked after source object is validated to map source object to target model.\r\n\t */\r\n\tprotected map(source: any): T {\r\n\t\treturn automapper.map('any', this.ModelClass, source);\r\n\t}\r\n\r\n\r\n\tprotected translate(fn: string, source: any, isEdit: boolean, errorCallback?: (err: ValidationError) => void): T {\r\n\t\tif (!this.enableValidation) {\r\n\t\t\treturn this.map(source);\r\n\t\t}\r\n\r\n\t\tlet [error, model] = this.validator[fn](source, { isEdit });\r\n\t\tif (error) {\r\n\t\t\tif (!errorCallback) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t\terrorCallback(error);\r\n\t\t}\r\n\r\n\t\treturn this.map(model);\r\n\t}\r\n}"]}