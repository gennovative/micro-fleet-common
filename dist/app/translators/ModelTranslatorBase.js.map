{"version":3,"sources":["app/translators/ModelTranslatorBase.ts"],"names":[],"mappings":";;AAGA;IAEC;QACC,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAQD;;OAEG;IACI,OAAO,CAAC,MAAW;QACzB,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,KAAK,CAAC;QACb,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,MAAW;QACxB,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,KAAK,CAAC;QACb,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;CAID;AAtCD,kDAsCC","file":"ModelTranslatorBase.js","sourcesContent":["import { ModelValidatorBase } from '../validators/ModelValidatorBase';\r\n\r\n\r\nexport abstract class ModelTranslatorBase<T> {\r\n\r\n\tconstructor() {\r\n\t\tthis.createMap();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets validator for specific type <T>.\r\n\t */\r\n\tprotected abstract get validator(): ModelValidatorBase<T>;\r\n\r\n\t/**\r\n\t * Validates then converts an object to type <T> for modification operation.\r\n\t */\r\n\tpublic forEdit(source: any): T {\r\n\t\tlet [error, model] = this.validator.forEdit(source);\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\treturn this.map(model);\r\n\t}\r\n\r\n\t/**\r\n\t * Validates then converts an object to type <T> for creation operation.\r\n\t */\r\n\tpublic forNew(source: any): T {\r\n\t\tlet [error, model] = this.validator.forNew(source);\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\r\n\t\treturn this.map(model);\r\n\t}\r\n\r\n\tprotected abstract createMap(): void;\r\n\tprotected abstract map(validatedSource: any): T;\r\n}\r\n"]}